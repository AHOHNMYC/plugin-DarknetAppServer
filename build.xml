<?xml version="1.0"?>
<!-- ant build file for Freenet -->

<project name="Freenet" default="dist" basedir=".">
	<property name="freenet.location" location="../fred/dist/freenet.jar"/>
	<property name="svn.revision" value="@custom@"/>
	<property name="source-version" value="1.6"/>
	<property name="target-version" value="1.6"/>
	<property name="build" location="build/"/>
	<property name="build-test" location="build-test/"/>
	<property name="dist" location="dist/"/>
	<property name="junit.location" value="/usr/share/java/junit.jar"/>
	<available file="src/plugins/darknetappserver/Version.java" property="version.present"/>
	<available file="${junit.location}" property="junit.present"/>

	<target name="mkdir">
		<mkdir dir="${build}"/>
		<mkdir dir="${build-test}"/>
		<mkdir dir="${dist}"/>
		<echo message="Using ${freenet.location} as freenet.jar"/>
	</target>

	<target name="setver" if="version.present">
		<!-- Update the Version file -->
		<replace file="src/plugins/darknetappserver/Version.java">
			<replacefilter token="@custom@" value="${svn.revision}"/>
		</replace>
	</target>
	<!-- ================================================== -->
	<target name="compile" depends="mkdir,setver" >
		<tstamp/>
		<javac srcdir="src/" destdir="${build}" debug="on" optimize="on" source="${source-version}" target="${target-version}" includeantruntime="false">
			<classpath>
				<pathelement location="${freenet.location}"/>
			</classpath>
			<include name="**/*.java"/>
			<exclude name="**/*Test.java"/>
		</javac>
	</target>

	<!-- Append txt file another way -->
	<!-- target name="dist"
			description="generate the distribution" >
		<jar jarfile="${dist}/DarknetAppServer.jar" duplicate="fail">
			<manifest>
				<attribute name="Plugin-Main-Class" value="plugins.darknetappserver.DarknetAppServerPlugin"/>
			</manifest>
			<fileset dir="src/" casesensitive="no">
				<include name="*.txt"/>
				<include name="**/*.java"/>
				<exclude name="**/*Test.java"/>
			</fileset>
			<fileset dir="${build}/"/>
		</jar>
	</target -->

	<!-- ================================================== -->
	<target name="clean" description="Delete class files and docs dir.">
		<delete dir="${build}"/>
		<delete dir="${build-test}"/>
		<delete dir="${dist}"/>
	</target>
</project>
